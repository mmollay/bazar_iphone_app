import{n as b,r as o,f as i}from"./index-kFPCxDRP.js";const q=()=>{const{user:r}=b(),[p,l]=o.useState(0),[E,f]=o.useState(0),[_,u]=o.useState(0),[g,s]=o.useState(!0),[S,d]=o.useState(null),h=async()=>{if(!r){l(0),f(0),u(0),s(!1);return}try{s(!0);const{data:t,error:n}=await i.from("profiles").select("personal_credits").eq("id",r.id).single();if(n)throw n;l((t==null?void 0:t.personal_credits)??0);const{data:e,error:m}=await i.from("credit_transactions").select("amount, transaction_type").eq("user_id",r.id);if(m)throw m;const w=(e==null?void 0:e.filter(a=>a.amount>0).reduce((a,c)=>a+c.amount,0))??0,y=Math.abs((e==null?void 0:e.filter(a=>a.amount<0).reduce((a,c)=>a+c.amount,0))??0);f(w),u(y),d(null)}catch(t){console.error("Error fetching token balance:",t),d(t instanceof Error?t.message:"Failed to fetch token balance")}finally{s(!1)}};return o.useEffect(()=>{h()},[r==null?void 0:r.id]),{balance:p,totalEarned:E,totalSpent:_,loading:g,error:S,refetch:h,fetchTransactions:async(t=50)=>{if(!r)return[];try{const{data:n,error:e}=await i.from("credit_transactions").select("*").eq("user_id",r.id).order("created_at",{ascending:!1}).limit(t);if(e)throw e;return n||[]}catch(n){return console.error("Error fetching credit transactions:",n),[]}}}};export{q as u};
